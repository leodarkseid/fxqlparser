var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.516,1,1.516]],["body/controllers/AppController.html",[0,2.124,1,2.124,2,2.25,3,0.658,4,0.658,5,0.557,6,2.25,7,0.769,8,2.495,9,2.387,10,3.745,11,2.817,12,2.189,13,2.25,14,0.056,15,3.745,16,1.19,17,2.817,18,1.375,19,1.375,20,0.658,21,1.375,22,2.124,23,1.598,24,2.25,25,1.642,26,2.817,27,2.817,28,0.892,29,1.582,30,2.25,31,2.817,32,2.817,33,2.817,34,0.658,35,0.557,36,2.25,37,2.25,38,2.817,39,2.817,40,1.598,41,2.817,42,2.817,43,2.817,44,2.817,45,1.598,46,2.817,47,0.039,48,0.039]],["title/modules/AppModule.html",[49,1.305,50,1.516]],["body/modules/AppModule.html",[1,2.311,2,2.866,3,0.617,4,0.617,5,0.523,14,0.056,25,1.725,28,0.837,29,1.99,30,2.111,34,0.617,35,0.523,47,0.038,48,0.038,49,1.989,50,2.851,51,1.291,52,1.291,53,1.761,54,1.761,55,1.291,56,2.714,57,1.761,58,2.111,59,2.111,60,2.111,61,2.3,62,1.725,63,2.391,64,1.761,65,1.761,66,2.643,67,3.588,68,2.643,69,2.643,70,1.761,71,2.643,72,2.111,73,2.643,74,2.643,75,1.761]],["title/interfaces/FXData.html",[76,0.978,77,1.305]],["body/interfaces/FXData.html",[3,0.701,4,0.701,5,0.594,14,0.055,16,1.268,34,1.014,47,0.041,48,0.041,76,1.589,77,2.119,78,1.703,79,1.703,80,3.001,81,2.215,82,1.429,83,2.119,84,3.001,85,1.65,86,2.119,87,2.602,88,1.942,89,1.833,90,1.65,91,1.65,92,2,93,2,94,2,95,2,96,2,97,2,98,2,99,2,100,2,101,1.465,102,1.268]],["title/classes/FXQLDto.html",[12,1.305,35,0.528]],["body/classes/FXQLDto.html",[3,0.287,4,0.287,5,0.243,7,0.336,9,0.697,12,0.984,13,0.982,14,0.057,16,0.519,20,0.287,22,1.452,25,0.738,28,0.389,34,0.598,35,0.506,40,2.692,45,1.992,47,0.021,48,0.021,75,0.819,82,1.417,85,1.483,86,0.984,88,1.483,89,0.851,90,1.483,91,1.483,102,1.082,103,0.819,104,0.697,105,0.851,106,1.229,107,2.045,108,2.045,109,2.045,110,1.973,111,2.045,112,2.045,113,1.609,114,1.609,115,1.609,116,1.229,117,0.982,118,1.609,119,1.609,120,1.706,121,1.609,122,1.609,123,1.342,124,0.982,125,1.143,126,0.982,127,2.045,128,0.819,129,1.609,130,0.982,131,0.982,132,0.982,133,0.982,134,1.342,135,1.609,136,0.982,137,0.982,138,2.045,139,0.982,140,0.982,141,0.982,142,0.982,143,0.982,144,2.366,145,0.982,146,0.697,147,0.982,148,0.982,149,1.342,150,0.819,151,1.342,152,0.982,153,0.984,154,0.982,155,0.982,156,0.819,157,1.609,158,0.819,159,0.819,160,0.982,161,0.982,162,2.045,163,2.045,164,2.611,165,0.982,166,0.982,167,0.982,168,0.982,169,1.342,170,2.045,171,1.609,172,0.982,173,2.045,174,0.982,175,0.982,176,1.68,177,2.045,178,2.045,179,0.982,180,2.045,181,0.982,182,1.609,183,2.045,184,0.982,185,2.045,186,0.982,187,1.609,188,0.982,189,0.982,190,2.366,191,2.611,192,1.973,193,2.366,194,2.366,195,0.982,196,0.982,197,0.982,198,0.982,199,1.706,200,0.982,201,0.982,202,0.982,203,0.982,204,0.982,205,0.982,206,0.982,207,0.982,208,0.982,209,0.982,210,0.982,211,0.982,212,1.342,213,0.819,214,1.609,215,2.045,216,0.982,217,0.982,218,0.982,219,0.982,220,0.697,221,0.982]],["title/interfaces/FXQLResponse.html",[76,0.978,101,1.305]],["body/interfaces/FXQLResponse.html",[3,0.689,4,0.689,5,0.583,7,0.805,14,0.055,20,0.689,34,1.005,47,0.041,48,0.041,76,1.576,77,2.229,78,1.673,79,1.673,81,1.673,82,1.08,83,1.885,85,1.631,86,2.101,87,2.572,88,1.929,89,1.818,90,1.631,91,1.631,92,1.965,93,1.965,94,1.965,95,1.965,96,1.965,97,1.965,98,1.965,99,1.965,100,1.965,101,1.885,102,1.929,105,1.631]],["title/injectables/FXQLService.html",[29,1.129,222,1.305]],["body/injectables/FXQLService.html",[3,0.389,4,0.389,5,0.329,7,0.454,8,1.708,9,1.774,14,0.056,16,1.321,18,1.527,19,1.527,20,0.731,21,1.527,22,2.275,23,1.454,24,2.048,25,1.145,28,0.527,29,1.083,34,0.389,35,0.329,36,1.329,37,1.329,40,2.61,45,2.153,47,0.04,48,0.027,62,1.287,72,1.329,81,1.454,82,1.468,85,1.083,88,0.703,89,0.703,90,1.083,91,1.083,102,0.703,110,1.108,128,1.108,134,1.108,146,0.944,149,1.708,150,1.108,151,1.708,153,1.252,156,1.108,158,1.108,159,1.108,176,1.454,222,1.252,223,1.108,224,1.329,225,3.128,226,2.564,227,1.329,228,1.664,229,1.664,230,2.564,231,1.664,232,1.664,233,3.514,234,2.564,235,1.664,236,1.664,237,1.664,238,1.108,239,1.664,240,1.664,241,1.664,242,1.664,243,1.664,244,1.664,245,1.664,246,1.664,247,1.664,248,1.664,249,1.664,250,1.664,251,1.664,252,1.664,253,1.664,254,2.564,255,1.664,256,2.564,257,1.664,258,2.564,259,1.664,260,2.564,261,1.664,262,2.564,263,1.664,264,2.564,265,1.664,266,2.564,267,1.664,268,2.564,269,1.664,270,1.664,271,1.664,272,1.664,273,1.664,274,1.664,275,1.664,276,1.664,277,1.664,278,1.664,279,1.664,280,1.664,281,1.664,282,1.664,283,1.664,284,2.564,285,1.664,286,1.664,287,1.664,288,2.564,289,1.664]],["title/interfaces/FXRate.html",[76,0.978,83,1.305]],["body/interfaces/FXRate.html",[3,0.65,4,0.65,5,0.55,7,0.76,14,0.055,20,0.977,34,0.977,47,0.039,48,0.039,76,1.531,77,1.814,78,1.578,79,1.578,81,1.578,82,1.019,83,2.042,85,1.964,86,2.453,87,2.475,88,1.885,89,1.767,90,1.964,91,1.964,92,1.854,93,1.854,94,1.854,95,1.854,96,1.854,97,1.854,98,1.854,99,1.854,100,1.854,101,1.359,102,1.175,105,1.569]],["title/modules/PrismaModule.html",[49,1.305,61,1.305]],["body/modules/PrismaModule.html",[3,0.71,4,0.71,5,0.601,14,0.054,25,1.442,28,0.963,34,0.71,35,0.601,47,0.041,48,0.041,49,2.133,51,1.485,52,1.485,53,2.026,54,2.026,55,1.485,56,2.91,57,2.91,61,2.436,62,1.912,63,2.624,64,2.026,65,2.026,290,2.429,291,3.041,292,2.429,293,3.041,294,3.938,295,3.041]],["title/injectables/PrismaService.html",[62,0.978,222,1.305]],["body/injectables/PrismaService.html",[3,0.72,4,0.72,5,0.609,14,0.056,16,1.302,18,1.505,19,1.505,20,0.72,21,1.505,25,1.609,28,0.976,34,0.72,35,0.609,47,0.042,48,0.042,62,1.454,70,2.054,222,1.94,223,2.054,227,2.462,296,2.462,297,3.972,298,4.396,299,3.972,300,4.643,301,3.082,302,3.082,303,2.462,304,3.082,305,3.082,306,3.082,307,3.082,308,3.082]],["title/classes/RegexDataValidator.html",[35,0.528,125,1.516]],["body/classes/RegexDataValidator.html",[3,0.257,4,0.257,5,0.218,7,0.301,8,1.226,9,0.625,12,0.538,14,0.056,16,1.406,18,1.351,19,1.351,20,0.646,21,1.351,22,1.344,23,1.746,25,0.673,28,0.349,34,0.553,35,0.468,40,2.633,45,1.887,47,0.019,48,0.019,75,0.734,82,1.63,85,1.3,86,0.898,88,1.169,89,0.777,90,1.3,91,1.3,102,0.465,103,0.734,104,0.625,105,0.777,107,1.469,108,1.469,109,1.469,110,1.578,111,1.469,112,1.469,113,0.879,114,0.879,115,0.879,117,0.879,118,1.469,119,1.469,120,1.578,121,1.469,122,1.892,123,1.226,124,0.879,125,1.344,126,1.469,127,3.072,128,1.578,129,2.211,130,1.469,131,1.469,132,1.469,133,0.879,134,1.226,135,1.469,136,0.879,137,1.469,138,2.658,139,0.879,140,0.879,141,0.879,142,0.879,143,0.879,144,2.957,145,0.879,146,0.625,147,0.879,148,0.879,149,1.226,150,0.734,151,1.226,152,0.879,153,0.898,154,0.879,155,0.879,156,0.734,157,1.469,158,0.734,159,0.734,160,0.879,161,0.879,162,1.892,163,1.892,164,2.459,165,0.879,166,0.879,167,0.879,168,0.879,169,1.226,170,1.892,171,1.469,172,0.879,173,1.892,174,0.879,175,0.879,176,1.57,177,1.892,178,1.892,179,0.879,180,1.892,181,0.879,182,1.469,183,1.892,184,0.879,185,1.892,186,0.879,187,1.469,188,0.879,189,0.879,190,2.211,191,2.459,192,1.844,193,2.211,194,2.211,195,0.879,196,0.879,197,0.879,198,0.879,199,1.578,200,0.879,201,0.879,202,0.879,203,1.469,204,0.879,205,0.879,206,0.879,207,1.469,208,0.879,209,2.211,210,0.879,211,0.879,212,1.226,213,0.734,214,1.469,215,1.892,216,0.879,217,0.879,218,0.879,219,0.879,220,0.625,221,0.879,309,1.839,310,1.839,311,1.839,312,1.839,313,1.101,314,1.101,315,1.101,316,1.101,317,1.101,318,1.101,319,1.101]],["title/coverage.html",[320,2.888]],["body/coverage.html",[0,1.494,1,1.494,5,0.521,6,2.103,12,1.286,14,0.055,20,0.95,29,1.112,35,0.708,47,0.038,48,0.038,55,1.286,62,0.964,76,1.489,77,1.286,79,2.307,83,1.286,101,1.286,104,2.307,125,1.494,153,1.286,199,3.446,212,2.907,220,1.494,222,1.748,224,2.103,238,1.754,296,2.103,320,2.103,321,2.633,322,2.633,323,2.633,324,4.363,325,3.579,326,2.633,327,4.814,328,2.103,329,2.907,330,2.103,331,3.579,332,1.754,333,1.754,334,2.633,335,2.633]],["title/dependencies.html",[52,1.565,336,1.795]],["body/dependencies.html",[14,0.056,28,1.067,35,0.831,47,0.044,48,0.044,52,1.645,70,2.245,123,2.245,303,2.691,337,4.581,338,3.369,339,3.369,340,3.369,341,3.369,342,3.369,343,3.369,344,3.369,345,3.369,346,3.369,347,3.369,348,3.369,349,3.369,350,3.369,351,3.369,352,3.369,353,3.369,354,3.369]],["title/miscellaneous/functions.html",[355,1.275,356,2.56]],["body/miscellaneous/functions.html",[7,0.857,14,0.053,18,2.165,19,2.165,20,1.036,21,2.165,23,2.28,47,0.042,48,0.042,55,2.165,104,1.78,120,2.954,213,2.091,220,2.28,238,2.678,328,2.507,329,2.091,330,3.21,332,2.954,333,3.115,355,1.78,356,2.507,357,3.541,358,3.138,359,3.138,360,3.138,361,3.138,362,3.138]],["title/index.html",[7,0.614,363,2.247,364,2.247]],["body/index.html",[14,0.049,47,0.049,48,0.049,146,2.626,153,1.929,192,2.632,365,3.951,366,3.951,367,3.951,368,3.951]],["title/modules.html",[51,1.765]],["body/modules.html",[14,0.048,47,0.048,48,0.048,50,2.203,51,1.896,61,1.896,369,4.582,370,4.582,371,4.582,372,4.582]],["title/overview.html",[373,2.888]],["body/overview.html",[0,1.748,14,0.053,29,1.857,47,0.042,48,0.042,49,1.505,50,2.877,51,1.505,52,1.505,53,2.054,54,2.054,55,1.505,56,2.054,57,2.054,58,2.462,59,2.462,60,2.462,61,2.402,62,1.856,63,2.647,64,2.054,65,2.054,78,1.748,103,2.054,169,2.054,176,1.748,223,2.054,290,2.462,292,2.462,373,2.462,374,4.396]],["title/properties.html",[105,1.354,336,1.795]],["body/properties.html",[14,0.055,47,0.048,48,0.048,105,1.641,375,3.884,376,3.884,377,3.884,378,3.884,379,3.884,380,3.884]],["title/miscellaneous/typealiases.html",[355,1.275,381,3.205]],["body/miscellaneous/typealiases.html",[7,1.048,14,0.048,20,0.897,47,0.048,48,0.048,82,1.666,329,2.559,332,3.033,333,3.033,355,2.179,357,3.636,382,3.84]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":199,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{}}}],["0.0.1",{"_index":376,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":169,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"overview.html":{}}}],["10",{"_index":248,"title":{},"body":{"injectables/FXQLService.html":{}}}],["10.0.0",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":374,"title":{},"body":{"overview.html":{}}}],["3",{"_index":176,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{},"overview.html":{}}}],["3.3.0",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":182,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["5.0.8",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["5.22.0",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["9]{0",{"_index":130,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["9]{0,})\\s*{\\s*buy\\s+([^\\s]+)\\s*sell\\s+([^\\s]+)\\s*cap\\s+([^\\s]+)\\s*}/gim",{"_index":131,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["alias",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":382,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["app",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["app.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":233,"title":{},"body":{"injectables/FXQLService.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["author",{"_index":380,"title":{},"body":{"properties.html":{}}}],["await",{"_index":271,"title":{},"body":{"injectables/FXQLService.html":{}}}],["badrequestexception",{"_index":117,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["badrequestexception(array.from(errors",{"_index":202,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["base64",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["base64touuid",{"_index":330,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["base64touuid(base64",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["base64uuid",{"_index":332,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["body",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["bootstrap",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":372,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":369,"title":{},"body":{"modules.html":{}}}],["buy",{"_index":85,"title":{},"body":{"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"classes/RegexDataValidator.html":{}}}],["buy.length",{"_index":179,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["buyendpos",{"_index":178,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["buyprice",{"_index":266,"title":{},"body":{"injectables/FXQLService.html":{}}}],["buystartpos",{"_index":173,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["cap",{"_index":91,"title":{},"body":{"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"classes/RegexDataValidator.html":{}}}],["cap.length",{"_index":188,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["capamount",{"_index":268,"title":{},"body":{"injectables/FXQLService.html":{}}}],["capendpos",{"_index":187,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["capstartpos",{"_index":185,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["case",{"_index":286,"title":{},"body":{"injectables/FXQLService.html":{}}}],["catch",{"_index":283,"title":{},"body":{"injectables/FXQLService.html":{}}}],["cause",{"_index":288,"title":{},"body":{"injectables/FXQLService.html":{}}}],["character",{"_index":193,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["charpositioninline",{"_index":167,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["class",{"_index":35,"title":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":103,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":290,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":292,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":291,"title":{},"body":{"modules/PrismaModule.html":{}}}],["config",{"_index":302,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":308,"title":{},"body":{"injectables/PrismaService.html":{}}}],["configmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":300,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log('data",{"_index":241,"title":{},"body":{"injectables/FXQLService.html":{}}}],["console.log('m2",{"_index":244,"title":{},"body":{"injectables/FXQLService.html":{}}}],["console.log('result",{"_index":250,"title":{},"body":{"injectables/FXQLService.html":{}}}],["console.log('ss",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["constraints",{"_index":219,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["constructor",{"_index":227,"title":{},"body":{"injectables/FXQLService.html":{},"injectables/PrismaService.html":{}}}],["constructor(config",{"_index":299,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(prisma",{"_index":228,"title":{},"body":{"injectables/FXQLService.html":{}}}],["constructor(private",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/FXQLService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":320,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":157,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["cp.length",{"_index":172,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["cpendpos",{"_index":171,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["cpstartpos",{"_index":170,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["create",{"_index":367,"title":{},"body":{"index.html":{}}}],["crypto.randomuuid",{"_index":257,"title":{},"body":{"injectables/FXQLService.html":{}}}],["currency",{"_index":88,"title":{},"body":{"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"classes/RegexDataValidator.html":{}}}],["currencypair",{"_index":81,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{}}}],["currencypairregex",{"_index":133,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["currencypairregex.test(data",{"_index":136,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["data",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["data.fxql",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["data.replace(/\\\\n/g",{"_index":240,"title":{},"body":{"injectables/FXQLService.html":{}}}],["datasources",{"_index":305,"title":{},"body":{"injectables/PrismaService.html":{}}}],["db",{"_index":306,"title":{},"body":{"injectables/PrismaService.html":{}}}],["dboperation",{"_index":270,"title":{},"body":{"injectables/FXQLService.html":{}}}],["dboperation.count",{"_index":274,"title":{},"body":{"injectables/FXQLService.html":{}}}],["declarations",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"classes/FXQLDto.html":{}}}],["default",{"_index":313,"title":{},"body":{"classes/RegexDataValidator.html":{}}}],["defaultmessage",{"_index":209,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":377,"title":{},"body":{"properties.html":{}}}],["destinationcurrency",{"_index":262,"title":{},"body":{"injectables/FXQLService.html":{}}}],["documentation",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["dto/index",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["dynamic",{"_index":93,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{}}}],["e.g",{"_index":96,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{}}}],["ensure",{"_index":111,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["entryid",{"_index":276,"title":{},"body":{"injectables/FXQLService.html":{}}}],["error",{"_index":284,"title":{},"body":{"injectables/FXQLService.html":{}}}],["error(`the",{"_index":289,"title":{},"body":{"injectables/FXQLService.html":{}}}],["errors",{"_index":152,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["errors.add",{"_index":190,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["errors.size",{"_index":200,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["escaped",{"_index":140,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["eur",{"_index":99,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{}}}],["eventid",{"_index":258,"title":{},"body":{"injectables/FXQLService.html":{}}}],["example",{"_index":365,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{}}}],["exports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["express",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":297,"title":{},"body":{"injectables/PrismaService.html":{}}}],["extract",{"_index":156,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["false",{"_index":124,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{}}}],["format",{"_index":108,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["function",{"_index":212,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{}}}],["functions",{"_index":356,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fxdata",{"_index":77,"title":{"interfaces/FXData.html":{}},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{},"coverage.html":{}}}],["fxql",{"_index":102,"title":{},"body":{"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"classes/RegexDataValidator.html":{}}}],["fxqldto",{"_index":12,"title":{"classes/FXQLDto.html":{}},"body":{"controllers/AppController.html":{},"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{}}}],["fxqlresponse",{"_index":101,"title":{"interfaces/FXQLResponse.html":{}},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{},"coverage.html":{}}}],["fxqlresponsedto",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["fxqlservice",{"_index":29,"title":{"injectables/FXQLService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/FXQLService.html":{},"coverage.html":{},"overview.html":{}}}],["fxrate",{"_index":83,"title":{"interfaces/FXRate.html":{}},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{},"coverage.html":{}}}],["gbp",{"_index":98,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{}}}],["getting",{"_index":363,"title":{"index.html":{}},"body":{}}],["global",{"_index":294,"title":{},"body":{"modules/PrismaModule.html":{}}}],["httpexception",{"_index":236,"title":{},"body":{"injectables/FXQLService.html":{}}}],["httpexception(`edge",{"_index":285,"title":{},"body":{"injectables/FXQLService.html":{}}}],["httpstatus",{"_index":237,"title":{},"body":{"injectables/FXQLService.html":{}}}],["httpstatus.i_am_a_teapot",{"_index":287,"title":{},"body":{"injectables/FXQLService.html":{}}}],["id",{"_index":256,"title":{},"body":{"injectables/FXQLService.html":{}}}],["identifier",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":126,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["import",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{}}}],["imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"classes/RegexDataValidator.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":80,"title":{},"body":{"interfaces/FXData.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{}}}],["injectable",{"_index":222,"title":{"injectables/FXQLService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/FXQLService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":223,"title":{},"body":{"injectables/FXQLService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["install",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["interface",{"_index":76,"title":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{}},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{},"coverage.html":{}}}],["interfaces",{"_index":78,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{},"overview.html":{}}}],["invalid",{"_index":107,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["isfinite(number",{"_index":206,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["isglobal",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["isinteger",{"_index":309,"title":{},"body":{"classes/RegexDataValidator.html":{}}}],["isinteger(value",{"_index":207,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["isnan(number",{"_index":205,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["isnumber",{"_index":310,"title":{},"body":{"classes/RegexDataValidator.html":{}}}],["isnumber(value",{"_index":203,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["isregexdata",{"_index":220,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isregexdata(validationoptions",{"_index":213,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"miscellaneous/functions.html":{}}}],["isstring",{"_index":118,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["isstring()@isregexdata({message",{"_index":106,"title":{},"body":{"classes/FXQLDto.html":{}}}],["jpy",{"_index":100,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{}}}],["json",{"_index":368,"title":{},"body":{"index.html":{}}}],["json.parse(data",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["keys",{"_index":94,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{}}}],["legend",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["length",{"_index":177,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["license",{"_index":378,"title":{},"body":{"properties.html":{}}}],["line",{"_index":192,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"index.html":{}}}],["linenumber",{"_index":164,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["lines",{"_index":147,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["list.buyprice",{"_index":281,"title":{},"body":{"injectables/FXQLService.html":{}}}],["list.capamount",{"_index":282,"title":{},"body":{"injectables/FXQLService.html":{}}}],["list.destinationcurrency",{"_index":279,"title":{},"body":{"injectables/FXQLService.html":{}}}],["list.id",{"_index":277,"title":{},"body":{"injectables/FXQLService.html":{}}}],["list.sellprice",{"_index":280,"title":{},"body":{"injectables/FXQLService.html":{}}}],["list.sourcecurrency",{"_index":278,"title":{},"body":{"injectables/FXQLService.html":{}}}],["match",{"_index":149,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["match.index",{"_index":163,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["match[0].indexof('buy",{"_index":175,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["match[0].indexof('cap",{"_index":186,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["match[0].indexof('sell",{"_index":181,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["match[1",{"_index":158,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["match[1].length",{"_index":174,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["match[2",{"_index":159,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["match[3",{"_index":160,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["match[4",{"_index":161,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["matches",{"_index":112,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["matching",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["matchstartpos",{"_index":162,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["matchstartpos).split('\\n').length",{"_index":166,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["message",{"_index":221,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["metadata",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["miscellaneous",{"_index":355,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{},"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["n",{"_index":146,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{},"index.html":{}}}],["name",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/FXQLService.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{},"miscellaneous/functions.html":{}}}],["nanoid",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":153,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{},"index.html":{}}}],["newdict",{"_index":252,"title":{},"body":{"injectables/FXQLService.html":{}}}],["newdict.map((obj",{"_index":255,"title":{},"body":{"injectables/FXQLService.html":{}}}],["newlines",{"_index":141,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["newlist",{"_index":254,"title":{},"body":{"injectables/FXQLService.html":{}}}],["newlist.length",{"_index":273,"title":{},"body":{"injectables/FXQLService.html":{}}}],["newlist.map((list",{"_index":275,"title":{},"body":{"injectables/FXQLService.html":{}}}],["null",{"_index":151,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["number",{"_index":86,"title":{},"body":{"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{},"classes/RegexDataValidator.html":{}}}],["number(cap",{"_index":198,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["number.isinteger(number(value",{"_index":208,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["numerical",{"_index":109,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["obj.buy",{"_index":267,"title":{},"body":{"injectables/FXQLService.html":{}}}],["obj.cap",{"_index":269,"title":{},"body":{"injectables/FXQLService.html":{}}}],["obj.currencypair.slice",{"_index":263,"title":{},"body":{"injectables/FXQLService.html":{}}}],["obj.currencypair.slice(0",{"_index":261,"title":{},"body":{"injectables/FXQLService.html":{}}}],["obj.sell",{"_index":265,"title":{},"body":{"injectables/FXQLService.html":{}}}],["object",{"_index":214,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["object.constructor",{"_index":217,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["optional",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/FXQLService.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":218,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["overview",{"_index":373,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":336,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pair",{"_index":89,"title":{},"body":{"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"classes/RegexDataValidator.html":{}}}],["pairs",{"_index":95,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/FXQLService.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{},"miscellaneous/functions.html":{}}}],["parsedata",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["parsedata(@body",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["parsedata(data",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["parseddata",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["parsefloat(match[2",{"_index":245,"title":{},"body":{"injectables/FXQLService.html":{}}}],["parsefloat(match[4",{"_index":246,"title":{},"body":{"injectables/FXQLService.html":{}}}],["parsefloat(value",{"_index":204,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["parsefxql",{"_index":225,"title":{},"body":{"injectables/FXQLService.html":{}}}],["parsefxql(data",{"_index":231,"title":{},"body":{"injectables/FXQLService.html":{}}}],["parseint(match[6",{"_index":247,"title":{},"body":{"injectables/FXQLService.html":{}}}],["parsing",{"_index":143,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["pattern",{"_index":211,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["position",{"_index":194,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["post",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["post('get",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["prisma",{"_index":230,"title":{},"body":{"injectables/FXQLService.html":{}}}],["prisma.service",{"_index":295,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":303,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"injectables/FXQLService.html":{}}}],["prismaclient",{"_index":298,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":61,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":62,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/FXQLService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":127,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["processdata",{"_index":226,"title":{},"body":{"injectables/FXQLService.html":{}}}],["processdata(data",{"_index":234,"title":{},"body":{"injectables/FXQLService.html":{}}}],["proper",{"_index":142,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["properties",{"_index":105,"title":{"properties.html":{}},"body":{"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{},"classes/RegexDataValidator.html":{},"properties.html":{}}}],["propertyname",{"_index":215,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["providers",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["rate",{"_index":87,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{}}}],["readonly",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/FXQLService.html":{}}}],["reflect",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["regexdata",{"_index":128,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["regexdata.exec(data",{"_index":243,"title":{},"body":{"injectables/FXQLService.html":{}}}],["regexdatavalidator",{"_index":125,"title":{"classes/RegexDataValidator.html":{}},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{}}}],["regexpexecarray",{"_index":150,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["registerdecorator",{"_index":119,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["replace",{"_index":139,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["required",{"_index":210,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["results",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["results.push",{"_index":249,"title":{},"body":{"injectables/FXQLService.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["returns",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{},"miscellaneous/functions.html":{}}}],["rxjs",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["sell",{"_index":90,"title":{},"body":{"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"classes/RegexDataValidator.html":{}}}],["sell.length",{"_index":184,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["sellendpos",{"_index":183,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["sellprice",{"_index":264,"title":{},"body":{"injectables/FXQLService.html":{}}}],["sellstartpos",{"_index":180,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["set",{"_index":154,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{}}}],["sourcecurrency",{"_index":260,"title":{},"body":{"injectables/FXQLService.html":{}}}],["src/.../index.ts",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":224,"title":{},"body":{"injectables/FXQLService.html":{},"coverage.html":{}}}],["src/app.service.ts:38",{"_index":235,"title":{},"body":{"injectables/FXQLService.html":{}}}],["src/app.service.ts:6",{"_index":229,"title":{},"body":{"injectables/FXQLService.html":{}}}],["src/app.service.ts:8",{"_index":232,"title":{},"body":{"injectables/FXQLService.html":{}}}],["src/dto/index.ts",{"_index":104,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/dto/index.ts:109",{"_index":116,"title":{},"body":{"classes/FXQLDto.html":{}}}],["src/dto/index.ts:13",{"_index":314,"title":{},"body":{"classes/RegexDataValidator.html":{}}}],["src/dto/index.ts:15",{"_index":319,"title":{},"body":{"classes/RegexDataValidator.html":{}}}],["src/dto/index.ts:21",{"_index":318,"title":{},"body":{"classes/RegexDataValidator.html":{}}}],["src/dto/index.ts:77",{"_index":317,"title":{},"body":{"classes/RegexDataValidator.html":{}}}],["src/dto/index.ts:82",{"_index":316,"title":{},"body":{"classes/RegexDataValidator.html":{}}}],["src/dto/index.ts:86",{"_index":315,"title":{},"body":{"classes/RegexDataValidator.html":{}}}],["src/main.ts",{"_index":328,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":293,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":296,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":301,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/tools/index.ts",{"_index":329,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/index.ts",{"_index":79,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{},"coverage.html":{}}}],["src/types/index.ts:6",{"_index":84,"title":{},"body":{"interfaces/FXData.html":{}}}],["started",{"_index":364,"title":{"index.html":{}},"body":{}}],["statements",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":82,"title":{},"body":{"interfaces/FXData.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"classes/RegexDataValidator.html":{},"miscellaneous/typealiases.html":{}}}],["super",{"_index":304,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":370,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":371,"title":{},"body":{"modules.html":{}}}],["table",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":216,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["this.app.processdata(data.fxql",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["this.isnumber(buy",{"_index":195,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["this.isnumber(cap",{"_index":197,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["this.isnumber(sell",{"_index":196,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["this.parsefxql(data",{"_index":253,"title":{},"body":{"injectables/FXQLService.html":{}}}],["this.prisma.transactionpool.createmany",{"_index":272,"title":{},"body":{"injectables/FXQLService.html":{}}}],["this.regexdata.exec(value",{"_index":155,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["this.validcurrencypair(cp",{"_index":189,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["throw",{"_index":201,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["tools",{"_index":239,"title":{},"body":{"injectables/FXQLService.html":{}}}],["transaction",{"_index":92,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{}}}],["transformer",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["try",{"_index":251,"title":{},"body":{"injectables/FXQLService.html":{}}}],["type",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"classes/FXQLDto.html":{},"interfaces/FXQLResponse.html":{},"injectables/FXQLService.html":{},"interfaces/FXRate.html":{},"injectables/PrismaService.html":{},"classes/RegexDataValidator.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":381,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unknown",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/FXQLService.html":{}}}],["unlicensed",{"_index":379,"title":{},"body":{"properties.html":{}}}],["url",{"_index":307,"title":{},"body":{"injectables/PrismaService.html":{}}}],["usd",{"_index":97,"title":{},"body":{"interfaces/FXData.html":{},"interfaces/FXQLResponse.html":{},"interfaces/FXRate.html":{}}}],["uses",{"_index":366,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":333,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["uuidtobase64",{"_index":238,"title":{},"body":{"injectables/FXQLService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uuidtobase64(id",{"_index":259,"title":{},"body":{"injectables/FXQLService.html":{}}}],["uuidtobase64(uuid",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":191,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["validate",{"_index":311,"title":{},"body":{"classes/RegexDataValidator.html":{}}}],["validate(value",{"_index":137,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["validationoptions",{"_index":120,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":123,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":121,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["validatorconstraintinterface",{"_index":122,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["validcurrencypair",{"_index":312,"title":{},"body":{"classes/RegexDataValidator.html":{}}}],["validcurrencypair(data",{"_index":132,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["validity",{"_index":135,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["value",{"_index":144,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["value.lastindexof('\\n",{"_index":168,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["value.replace(/\\\\n/g",{"_index":145,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["value.split('\\n",{"_index":148,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["value.substring(0",{"_index":165,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["values",{"_index":110,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["version",{"_index":375,"title":{},"body":{"properties.html":{}}}],["x",{"_index":113,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["y",{"_index":114,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["yes",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":115,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["z0",{"_index":129,"title":{},"body":{"classes/FXQLDto.html":{},"classes/RegexDataValidator.html":{}}}],["z]{3",{"_index":134,"title":{},"body":{"classes/FXQLDto.html":{},"injectables/FXQLService.html":{},"classes/RegexDataValidator.html":{}}}],["z]{3})\\s*{\\s*buy\\s+(\\d+(\\.\\d+)?)\\s*sell\\s+(\\d+(\\.\\d+)?)\\s*cap\\s+(\\d+)\\s*}/gim",{"_index":242,"title":{},"body":{"injectables/FXQLService.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                parseData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        parseData\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseData(data: FXQLDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('get')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            FXQLDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { FXQLService } from './app.service';\nimport { FXQLDto } from './dto';\n//import { FXQLResponseDto } from './dto/index';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly app: FXQLService) {}\n\n  @Post('get')\n  async parseData(@Body() data: FXQLDto) {\n    //const parsedData = JSON.parse(data);\n    //console.log('ss', data.FXQL);\n    return this.app.processData(data.FXQL);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nFXQLService\n\nFXQLService\n\nAppModule -->\n\nFXQLService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FXQLService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { FXQLService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { PrismaService } from './prisma/prisma.service';\n\n@Module({\n  imports: [ConfigModule.forRoot({ isGlobal: true }), PrismaModule],\n  controllers: [AppController],\n  providers: [PrismaService, FXQLService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FXData.html":{"url":"interfaces/FXData.html","title":"interface - FXData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FXData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/index.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [currencyPair: string]:        FXRate\n\n                    \n                \n                        \n                            \n                                Defined in src/types/index.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface FXRate {\n  BUY: number; // The buy rate for the currency pair\n  SELL: number; // The sell rate for the currency pair\n  CAP: number; // The transaction cap for the currency pair\n}\nexport interface FXData {\n  [currencyPair: string]: FXRate; // Dynamic keys for currency pairs (e.g., \"USD-GBP\", \"EUR-JPY\")\n}\n\nexport interface FXQLResponse {\n  FXQL: FXData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FXQLDto.html":{"url":"classes/FXQLDto.html","title":"class - FXQLDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FXQLDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/index.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                FXQL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        FXQL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsRegexData({message: 'Invalid data format or numerical values. Ensure it matches: [CURRENCY-CURRENCY] { BUY X SELL Y CAP Z }'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/index.ts:109\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from '@nestjs/common';\nimport {\n  IsString,\n  registerDecorator,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n@ValidatorConstraint({ async: false })\nexport class RegexDataValidator implements ValidatorConstraintInterface {\n \n  private regexData =\n    /([A-Z0-9]{0,}-[A-Z0-9]{0,})\\s*{\\s*BUY\\s+([^\\s]+)\\s*SELL\\s+([^\\s]+)\\s*CAP\\s+([^\\s]+)\\s*}/gim;\n  validCurrencyPair(data: string) {\n    const currencyPairRegex = /^[A-Z]{3}-[A-Z]{3}$/;\n    const validity = currencyPairRegex.test(data);\n    return validity;\n  }\n\n  validate(value: string): boolean {\n    // Replace escaped newlines for proper parsing\n    value = value.replace(/\\\\n/g, '\\n');\n    const lines = value.split('\\n');\n    let match: RegExpExecArray | null;\n    const errors = new Set();\n    while ((match = this.regexData.exec(value)) !== null) {\n      // Extract currency pair and values\n      const CP = match[1];\n      const BUY = match[2];\n      const SELL = match[3];\n      const CAP = match[4];\n      const matchStartPos = match.index;\n      const lineNumber = value.substring(0, matchStartPos).split('\\n').length;\n       const charPositionInLine =\n         matchStartPos - value.lastIndexOf('\\n', matchStartPos) - 1;\n       const cpStartPos = match.index;\n       const cpEndPos = cpStartPos + CP.length;\n\n       const buyStartPos =\n         match.index + match[1].length + match[0].indexOf('BUY') + 3; // 3 for the length of \"BUY\"\n       const buyEndPos = buyStartPos + BUY.length;\n\n       const sellStartPos = buyEndPos + match[0].indexOf('SELL') + 4; // 4 for the length of \"SELL\"\n       const sellEndPos = sellStartPos + SELL.length;\n\n       const capStartPos = sellEndPos + match[0].indexOf('CAP') + 3; // 3 for the length of \"CAP\"\n       const capEndPos = capStartPos + CAP.length;\n      if (!this.validCurrencyPair(CP)) {\n        errors.add(\n          `Currency Pair -${CP} is not Valid at Line ${lineNumber} Character Position - ${cpStartPos}-${cpEndPos}`,\n        );\n      }\n\n      if (!this.isNumber(BUY)) {\n        errors.add(\n          `BUY Value- ${BUY} is not valid at Line: ${lineNumber} Character Position - ${buyStartPos}-${buyEndPos}`,\n        );\n      }\n      if (!this.isNumber(SELL)) {\n        errors.add(\n          `SELL Value- ${SELL} is not valid at Line: ${lineNumber} Character Position - ${sellStartPos}-${sellEndPos}`,\n        );\n      }\n      if (!this.isNumber(CAP) || Number(CAP) % 1 !== 0) {\n        errors.add(\n          `CAP Value- ${CAP} is not valid at Line: ${lineNumber} Character Position - ${capStartPos}-${capEndPos}`,\n        );\n      }\n    }\n    if (errors.size > 0) {\n      throw new BadRequestException(Array.from(errors));\n    }\n    return true;\n  }\n\n  private isNumber(value: string): boolean {\n    const number = parseFloat(value);\n    return !isNaN(number) && isFinite(number) &&  number > 0;\n  }\n\n  private isInteger(value: string): boolean {\n    return Number.isInteger(Number(value));\n  }\n\n  defaultMessage(): string {\n    return 'Data format is invalid. Ensure it matches the required pattern and numerical values are valid.';\n  }\n}\n\nexport function IsRegexData(validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: RegexDataValidator,\n    });\n  };\n}\n\nexport class FXQLDto {\n  @IsString()\n  @IsRegexData({\n    message:\n      'Invalid data format or numerical values. Ensure it matches: [CURRENCY-CURRENCY] { BUY X SELL Y CAP Z }',\n  })\n  FXQL: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FXQLResponse.html":{"url":"interfaces/FXQLResponse.html","title":"interface - FXQLResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FXQLResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            FXQL\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        FXQL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FXQL:         FXData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FXData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FXRate {\n  BUY: number; // The buy rate for the currency pair\n  SELL: number; // The sell rate for the currency pair\n  CAP: number; // The transaction cap for the currency pair\n}\nexport interface FXData {\n  [currencyPair: string]: FXRate; // Dynamic keys for currency pairs (e.g., \"USD-GBP\", \"EUR-JPY\")\n}\n\nexport interface FXQLResponse {\n  FXQL: FXData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FXQLService.html":{"url":"injectables/FXQLService.html","title":"injectable - FXQLService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FXQLService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseFXQL\n                            \n                            \n                                    Async\n                                processData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        parseFXQL\n                        \n                    \n                \n            \n            \n                \nparseFXQL(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Array\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processData\n                        \n                    \n                \n            \n            \n                \n                        \n                    processData(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from './prisma/prisma.service';\nimport { uuidToBase64 } from './tools';\n\n@Injectable()\nexport class FXQLService {\n  constructor(private readonly prisma: PrismaService) {}\n  parseFXQL(\n    data: string,\n  ): Array {\n    data = data.replace(/\\\\n/g, '\\n');\n    //console.log('data', data);\n    const regexData =\n      /([A-Z]{3}-[A-Z]{3})\\s*{\\s*BUY\\s+(\\d+(\\.\\d+)?)\\s*SELL\\s+(\\d+(\\.\\d+)?)\\s*CAP\\s+(\\d+)\\s*}/gim;\n    const results: Array = [];\n\n    let match: RegExpExecArray | null;\n    while ((match = regexData.exec(data)) !== null) {\n      // Extract currency pair and values\n\n      const currencyPair = match[1];\n      //console.log('m2', match[2]);\n      const BUY = parseFloat(match[2]);\n      const SELL = parseFloat(match[4]);\n      const CAP = parseInt(match[6], 10);\n\n      results.push({ currencyPair, BUY, SELL, CAP });\n    }\n    //console.log('Result', results);\n    return results;\n  }\n\n  async processData(data: string) {\n    try {\n      const newDict = this.parseFXQL(data);\n      const newList: Array = newDict.map((obj) => {\n        const id = crypto.randomUUID();\n        const eventId = `FXQL-${uuidToBase64(id)}`;\n        return {\n          id: eventId,\n          sourceCurrency: obj.currencyPair.slice(0, 3),\n          destinationCurrency: obj.currencyPair.slice(-3),\n          sellPrice: obj.SELL,\n          buyPrice: obj.BUY,\n          capAmount: obj.CAP,\n        };\n      });\n      const dbOperation = await this.prisma.transactionPool.createMany({\n        data: newList,\n      });\n      if (newList.length == dbOperation.count) {\n        return newList.map((list) => {\n          return {\n            EntryId: list.id,\n            SourceCurrency: list.sourceCurrency,\n            DestinationCurrency: list.destinationCurrency,\n            SellPrice: list.sellPrice,\n            BuyPrice: list.buyPrice,\n            CapAmount: list.capAmount,\n          };\n        });\n      }\n    } catch (error) {\n      return new HttpException(`Edge case error`, HttpStatus.I_AM_A_TEAPOT, {\n        cause: new Error(`The cause of this is unknown`),\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FXRate.html":{"url":"interfaces/FXRate.html","title":"interface - FXRate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FXRate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            BUY\n                                        \n                                \n                                \n                                        \n                                            CAP\n                                        \n                                \n                                \n                                        \n                                            SELL\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        BUY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BUY:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CAP\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CAP:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SELL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SELL:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FXRate {\n  BUY: number; // The buy rate for the currency pair\n  SELL: number; // The sell rate for the currency pair\n  CAP: number; // The transaction cap for the currency pair\n}\nexport interface FXData {\n  [currencyPair: string]: FXRate; // Dynamic keys for currency pairs (e.g., \"USD-GBP\", \"EUR-JPY\")\n}\n\nexport interface FXQLResponse {\n  FXQL: FXData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  constructor(config: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegexDataValidator.html":{"url":"classes/RegexDataValidator.html","title":"class - RegexDataValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegexDataValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                    Private\n                                isInteger\n                            \n                            \n                                    Private\n                                isNumber\n                            \n                            \n                                validate\n                            \n                            \n                                validCurrencyPair\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /([A-Z0-9]{0,}-[A-Z0-9]{0,})\\s*{\\s*BUY\\s+([^\\s]+)\\s*SELL\\s+([^\\s]+)\\s*CAP\\s+([^\\s]+)\\s*}/gim\n                    \n                \n                    \n                        \n                                Defined in src/dto/index.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/dto/index.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isInteger\n                        \n                    \n                \n            \n            \n                \n                        \n                    isInteger(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dto/index.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    isNumber(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dto/index.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dto/index.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validCurrencyPair\n                        \n                    \n                \n            \n            \n                \nvalidCurrencyPair(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dto/index.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from '@nestjs/common';\nimport {\n  IsString,\n  registerDecorator,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n@ValidatorConstraint({ async: false })\nexport class RegexDataValidator implements ValidatorConstraintInterface {\n \n  private regexData =\n    /([A-Z0-9]{0,}-[A-Z0-9]{0,})\\s*{\\s*BUY\\s+([^\\s]+)\\s*SELL\\s+([^\\s]+)\\s*CAP\\s+([^\\s]+)\\s*}/gim;\n  validCurrencyPair(data: string) {\n    const currencyPairRegex = /^[A-Z]{3}-[A-Z]{3}$/;\n    const validity = currencyPairRegex.test(data);\n    return validity;\n  }\n\n  validate(value: string): boolean {\n    // Replace escaped newlines for proper parsing\n    value = value.replace(/\\\\n/g, '\\n');\n    const lines = value.split('\\n');\n    let match: RegExpExecArray | null;\n    const errors = new Set();\n    while ((match = this.regexData.exec(value)) !== null) {\n      // Extract currency pair and values\n      const CP = match[1];\n      const BUY = match[2];\n      const SELL = match[3];\n      const CAP = match[4];\n      const matchStartPos = match.index;\n      const lineNumber = value.substring(0, matchStartPos).split('\\n').length;\n       const charPositionInLine =\n         matchStartPos - value.lastIndexOf('\\n', matchStartPos) - 1;\n       const cpStartPos = match.index;\n       const cpEndPos = cpStartPos + CP.length;\n\n       const buyStartPos =\n         match.index + match[1].length + match[0].indexOf('BUY') + 3; // 3 for the length of \"BUY\"\n       const buyEndPos = buyStartPos + BUY.length;\n\n       const sellStartPos = buyEndPos + match[0].indexOf('SELL') + 4; // 4 for the length of \"SELL\"\n       const sellEndPos = sellStartPos + SELL.length;\n\n       const capStartPos = sellEndPos + match[0].indexOf('CAP') + 3; // 3 for the length of \"CAP\"\n       const capEndPos = capStartPos + CAP.length;\n      if (!this.validCurrencyPair(CP)) {\n        errors.add(\n          `Currency Pair -${CP} is not Valid at Line ${lineNumber} Character Position - ${cpStartPos}-${cpEndPos}`,\n        );\n      }\n\n      if (!this.isNumber(BUY)) {\n        errors.add(\n          `BUY Value- ${BUY} is not valid at Line: ${lineNumber} Character Position - ${buyStartPos}-${buyEndPos}`,\n        );\n      }\n      if (!this.isNumber(SELL)) {\n        errors.add(\n          `SELL Value- ${SELL} is not valid at Line: ${lineNumber} Character Position - ${sellStartPos}-${sellEndPos}`,\n        );\n      }\n      if (!this.isNumber(CAP) || Number(CAP) % 1 !== 0) {\n        errors.add(\n          `CAP Value- ${CAP} is not valid at Line: ${lineNumber} Character Position - ${capStartPos}-${capEndPos}`,\n        );\n      }\n    }\n    if (errors.size > 0) {\n      throw new BadRequestException(Array.from(errors));\n    }\n    return true;\n  }\n\n  private isNumber(value: string): boolean {\n    const number = parseFloat(value);\n    return !isNaN(number) && isFinite(number) &&  number > 0;\n  }\n\n  private isInteger(value: string): boolean {\n    return Number.isInteger(Number(value));\n  }\n\n  defaultMessage(): string {\n    return 'Data format is invalid. Ensure it matches the required pattern and numerical values are valid.';\n  }\n}\n\nexport function IsRegexData(validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: RegexDataValidator,\n    });\n  };\n}\n\nexport class FXQLDto {\n  @IsString()\n  @IsRegexData({\n    message:\n      'Invalid data format or numerical values. Ensure it matches: [CURRENCY-CURRENCY] { BUY X SELL Y CAP Z }',\n  })\n  FXQL: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            FXQLService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dto/index.ts\n            \n            class\n            FXQLDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dto/index.ts\n            \n            class\n            RegexDataValidator\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/dto/index.ts\n            \n            function\n            IsRegexData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/tools/index.ts\n            \n            function\n            base64toUUID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/tools/index.ts\n            \n            function\n            uuidToBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/tools/index.ts\n            \n            type alias\n            Base64UUID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/tools/index.ts\n            \n            type alias\n            UUID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/index.ts\n            \n            interface\n            FXData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/index.ts\n            \n            interface\n            FXQLResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/index.ts\n            \n            interface\n            FXRate\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : ^5.22.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            install : ^0.13.0\n        \n            nanoid : ^5.0.8\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            base64toUUID   (src/.../index.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            IsRegexData   (src/.../index.ts)\n                        \n                        \n                            uuidToBase64   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tools/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        base64toUUID\n                        \n                    \n                \n            \n            \n                \nbase64toUUID(base64: Base64UUID)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                base64\n                                            \n                                                            Base64UUID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UUID\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuidToBase64\n                        \n                    \n                \n            \n            \n                \nuuidToBase64(uuid: UUID)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            UUID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Base64UUID\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/dto/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsRegexData\n                        \n                    \n                \n            \n            \n                \nIsRegexData(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nyour example uses //n to create new line in json\nit should be /n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nFXQLService\n\nFXQLService\n\nAppModule -->\n\nFXQLService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Base64UUID   (src/.../index.ts)\n                        \n                        \n                            UUID   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tools/index.ts\n    \n    \n        \n            \n                \n                    \n                    Base64UUID\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UUID\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
